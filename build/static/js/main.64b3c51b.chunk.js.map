{"version":3,"sources":["Components/About/About.js","Components/Contact/CommentsForm.js","Components/Home/RestaurantInfo.js","Components/AddRestaurant/RestaurantForm.js","Components/UpdateRestaurant/UpdateRestaurant.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","props","nameInput","useRef","emailInput","ideasInput","createComment","event","a","preventDefault","name","current","value","email","ideas","body","JSON","stringify","currentTarget","reset","fetch","method","headers","console","log","target","error","onSubmit","type","ref","PullBackend","useState","collections","setCollections","filteredItems","setFilteredItems","fetchCollections","response","json","data","useEffect","onChange","e","found","filter","elements","ruleout","toLowerCase","includes","length","handleFilter","options","map","collection","id","to","_id","city","zip","culture","dish","cityInput","zipInput","cultureInput","dishInput","ruleoutInput","createCollection","deleteCollection","filteredCollections","onClick","UpdateRestaurant","showCollection","match","params","updateCollection","defaultValue","href","rel","App","exact","path","component","RestaurantInfo","RestaurantForm","CommentsForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64b3c51b.chunk.js","sourcesContent":["import React from 'react'\n\nconst About = () => {\n    return (\n        <div className=\"about\">\n            <h2>About US</h2>\n            <h4><p>WELCOME!<br /> </p>\n                    <p>To your culinary collection,<br /> Have you ever wondered, \"What restaurant was it that I had that amazing dish?\" or \"Where had that vegan, gluten free, dairy free fetuccini alfredo?\"</p>\n                   <p>No worries! Just take a moment to enter the info in our app and you will have instant recollection. <br/> Happy eating!</p> \n                </h4>\n        </div>\n    )\n}\n\nexport default About;","import { useRef } from 'react';\n\nexport default (props) => {\n    const nameInput = useRef(null);\n    const emailInput = useRef(null);\n    const ideasInput = useRef(null);\n\n    const createComment = async (event) => {\n        event.preventDefault()\n        const name = nameInput.current.value\n        const email = emailInput.current.value;\n        const ideas = ideasInput.current.value;\n        const body = JSON.stringify({\n            name, email, ideas\n        });// turns js object to json database\n        event.currentTarget.reset();\n        try{\n            const response = await fetch('http://localhost:3000/comments', {\n                method : 'POST',\n                headers : {\n                    'Content-type': 'application/json'\n                },\n                body: body\n            })\n            // const data = await response.json();\n            // props.updateComment([...props.comments,\n            // data])\n            \n            console.log(event.target)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    return (\n        <div className=\"searchForm\">\n            <h3>We would love to hear from you! <br/> Have a thought, comment or idea? <br />Please share it with us, we will try to respond!</h3> <br />\n            <form className=\"commentForm\" onSubmit={createComment}>\n            <label> Name: <input type=\"text\" ref={nameInput} /></label>  <br />\n            <label> Email: <input type=\"text\" ref={emailInput} /></label>  <br /> \n            <label> Ideas: <input type=\"text\" ref={ideasInput} /></label> <br />\n                <input type=\"submit\" value=\"Create Comment\" />  \n            </form><br />\n\n            \n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'; // Need to add code for location button for search results and link to goole maps if have time\nimport { Link } from 'react-router-dom';\n// import Modal from '../Modal/Modal';\n\n\nconst PullBackend = (props) => {\n    const [collections, setCollections] = useState([]);\n    const [filteredItems, setFilteredItems] = useState([]);\n    \n    \n    const fetchCollections = async () => {\n        try {\n            const response = await fetch('http://localhost:3000/collections');\n            const data = await response.json();\n            if (data) { // null checker\n                console.log(data);\n            setCollections(data)\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        fetchCollections()\n    }, [])\n\n\n    // MyModel.find({ name: new RegExp('john', 'i') }, null).exec();\nconst handleFilter = (e) => {\n    const found = collections.filter(elements => {\n        if (elements.ruleout.toLowerCase().includes(e)) {\n            return elements;\n        }\n    });\n    if (e.length > 0) {\n        setFilteredItems(found);\n    } else {\n        setFilteredItems([]);\n    }\n    \n}\n\n    return (\n        \n        <div className=\"searchForm\">\n        {/* <Modal /> */}\n            <form>\n                <label> RULEOUT: <input onChange= {(e) => handleFilter(e.target.value)} type=\"text\" options=\"\"></input></label>\n                {/* <input  type='submit'></input> */}\n            </form>\n            <div className=\"deck\">\n            {\n                filteredItems.length > 1 ? \n                filteredItems.map(collection => {\n                    return (\n                        <div id=\"rinfoForm\">\n                    <Link to={`/UpdateRestaurant/${collection._id}`}><div  key={collections._id}>\n                    <h3>Name: {collection.name}<br /> City: {collection.city} <br /> Zip: {collection.zip} <br />\n                    Cuisine: {collection.culture} <br /> Dish: {collection.dish} <br /> Ruleout: {collection.ruleout}</h3>\n                    </div>\n                    </Link>\n                    \n                    </div>\n                    )\n                }) : \n                (<div> Search for what you need to ruleout of your meal! <br />Can't remember the Restaurant? Food restrictions? No worries! <br />\n                Click on a Restaurant to update information or for directions.</div>)\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default PullBackend;","import { useState, useEffect, useRef } from 'react';// need to fix update route and button, create a separate form\n\n\n\nexport default (props) => {\n    const nameInput = useRef(null);\n    const cityInput = useRef(null);\n    const zipInput = useRef(null);\n    const cultureInput = useRef(null);\n    const dishInput = useRef(null);\n    const ruleoutInput = useRef(null);\n\n\n    const [collections, setCollections] = useState([])\n\n   // CREATE\n    const createCollection = async (event) => {\n        event.preventDefault()\n        const name = nameInput.current.value\n        const city = cityInput.current.value;\n        const zip = zipInput.current.value;\n        const culture = cultureInput.current.value\n        const dish = dishInput.current.value;\n        const ruleout = ruleoutInput.current.value;\n        const body = JSON.stringify({\n            name, city, zip, culture, dish, ruleout\n        });// turns js object to json database\n        event.currentTarget.reset();\n        try{\n            const response = await fetch('http://localhost:3000/collections', {\n                method : 'POST',\n                headers : {\n                    'Content-type': 'application/json'\n                },\n                body: body\n            })\n            const data = await response.json();\n            console.log(collections)\n            setCollections([...collections, \n            data])\n            \n            console.log(event.target)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    \n    // READ\n  const fetchCollections = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/collections')\n      const data = await response.json();\n      setCollections(data)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n\n    // DELETE\n    const deleteCollection = async (id) => {\n        try{\n            const response = await fetch(`http://localhost:3000/collections/${id}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-type': 'application/json',\n                }\n            })\n            const data = await response.json();\n            const filteredCollections = collections.filter(collection => collection._id !== data._id)\n            setCollections(filteredCollections);\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    \n    useEffect(() =>{\n    fetchCollections();\n    }, [])\n\n    return (\n        <div className=\"searchForm\">\n            <h3>Was it good! Add your fav Restaurant location and dish on this page!</h3>\n            <br />\n            <form  onSubmit={createCollection}>\n            <label> Name: <input type=\"text\" ref={nameInput} /> </label>  \n            <label> City: <input type=\"text\" ref={cityInput} /> </label>   \n            <label> Zip: <input type=\"text\" ref={zipInput} /> </label> <br />\n            <label> Culture: <input type=\"text\" ref={cultureInput} /> </label>  \n            <label> Dish: <input type=\"text\" ref={dishInput} /> </label>  \n            <label> Ruleout: <input type=\"text\" ref={ruleoutInput} /> </label> \n                <input type=\"submit\" value=\"Add A Restaurant\" />  \n            </form><br />\n            <div className=\"deck\">\n            {\n                collections.map(collection => {\n                return (\n                    <div className=\"colForm\">\n                    <li key={collection._id}>\n                    {collection.name} <br /> {collection.city} <br />\n                    <button onClick={\n                        (event) => {\n                            deleteCollection(collection._id)\n                        }\n                    }>Delete {collection.name}</button>\n                    </li>\n                    </div>\n                )\n                })\n            }\n            </div>\n        </div>\n    )\n\n}","import React from 'react'\nimport { useRef, useEffect, useState } from 'react'\n\n\n\nconst UpdateRestaurant = (props) => {\n    const nameInput = useRef(null);\n    const cityInput = useRef(null);\n    const zipInput = useRef(null);\n    const cultureInput = useRef(null);\n    const dishInput = useRef(null);\n    const ruleoutInput = useRef(null);\n\n    const [collection, setCollections] = useState({\n            name : \"\",\n            city : \"\",\n            zip : \"\",\n            culture : \"\",\n            dish : \"\",\n            ruleout : \"\"\n    })\n\n    \n    \n    \n    // show - Update\n  const showCollection = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:3000/collections/${props.match.params.id}`, {\n          method: 'GET',\n          headers: {\n              'Content-type': 'application/json',\n          }\n      })\n      const collection = await response.json();\n      \n      setCollections(collection);\n     \n\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n    // UPDATE\n    const updateCollection = async (event) => {\n\n            event.preventDefault()\n            const name = nameInput.current.value\n            const city = cityInput.current.value;\n            const zip = zipInput.current.value;\n            const culture = cultureInput.current.value\n            const dish = dishInput.current.value;\n            const ruleout = ruleoutInput.current.value;\n            const body = JSON.stringify({\n                name, city, zip, culture, dish, ruleout\n            });// turns js object to json database\n            event.currentTarget.reset();\n            try{\n                const response = await fetch(`http://localhost:3000/collections/${props.match.params.id}`, {\n                    method : 'PUT',\n                    headers : {\n                        'Content-type': 'application/json'\n                    },\n                    body: body\n                })\n            const data = await response.json();\n            console.log(data._id)\n            // const filteredCollections = props.collections.filter(collection => collection._id !== data._id)\n            // console.log(props.collections)\n            // props.collections([...filteredCollections, data])\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n\n// useEffect\n\nuseEffect(() => {\n    showCollection()\n}, [collection])\n\n\n\n\n    return (\n        <div>\n            <h2>UPDATE INFO</h2>\n            <h3>Need to make a change or add a new dish! Update it here!</h3>\n            <br />\n            <form className=\"collectionsForm\" onSubmit={updateCollection}>\n            <label> Name: <input type=\"text\" ref={nameInput} defaultValue={collection.name}/>{props.name} </label>  \n            <label> City: <input type=\"text\" ref={cityInput} defaultValue={collection.city}/> {props.city}</label>   \n            <label> Zip: <input type=\"text\" ref={zipInput} defaultValue={collection.zip}/>{props.zip} </label> <br />\n            <label> Culture: <input type=\"text\" ref={cultureInput} defaultValue={collection.culture}/>{props.culture} </label>  \n            <label> Dish: <input type=\"text\" ref={dishInput} defaultValue={collection.dish}/>{props.dish} </label>  \n            <label> Ruleout: <input type=\"text\" ref={ruleoutInput} defaultValue={collection.ruleout}/>{props.ruleout} </label> \n                <input type=\"submit\" value=\"Update Restaurant Info\" />  \n               </form><br /> \n               <a href=\"https://goo.gl/maps/yRntqZbWT4z6xFxWA\" target=\"_blank\" rel=\"noreferrer\"><input type=\"submit\" value=\"Let's go eat!\" /></a>  \n            \n            \n            {/* {\n                collection.map(collection => {\n                return (\n                    <>\n                    <li key={collection._id}>\n                    {collection.name}\n                    </li>\n                    </>\n                )\n                })\n            } */}\n        </div>\n    )\n}\n\nexport default UpdateRestaurant;","// need to work more on CSS at the least fix the navigation bar\n// add click restaurant message for update info.\nimport { Route, Link, Switch } from 'react-router-dom';// if have time add authentication \nimport About from './Components/About/About';\nimport CommentsForm from './Components/Contact/CommentsForm';\nimport RestaurantInfo from './Components/Home/RestaurantInfo';\nimport RestaurantForm from './Components/AddRestaurant/RestaurantForm';\nimport UpdateRestaurant from './Components/UpdateRestaurant/UpdateRestaurant';\n\nimport { Container, Row, Col, Modal } from 'reactstrap';\nimport './App.css';\n\nfunction App() {\n  \n\n  return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n     \n      <nav>\n          \n          <Link  to='/'><h1 id=\"appName\">RESTAURANT APP</h1> <br /> <br /> </Link>\n        \n          <Link to='/about'><h3>About Us</h3> <br /> </Link>\n          <Link to='/addrestaurant'><h3>Add Restaurant</h3> <br /> </Link>\n          <Link to='/contact'><h3>GuestBook</h3> <br /> </Link>\n      </nav>\n     </header> \n     <main>\n        <Switch>\n          <Route exact path='/' component={RestaurantInfo} />\n          <Route path='/about' component={About} />\n          <Route path='/addrestaurant' component={RestaurantForm} />\n          <Route path='/contact' component={CommentsForm} />\n          <Route path='/UpdateRestaurant/:id' component={UpdateRestaurant}/>\n        </Switch>\n      </main>\n      <footer><h4>Our Phone: 555-5555     |       Our Email: haveit@yourway.com</h4></footer>\n    </div>\n  );\n}\n\nexport default App; \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n    <App />\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}